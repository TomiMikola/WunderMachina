- name: Allow admins to connect into servers with ssh
  set_fact:
    upcloud_firewall_rules: >
      {{ upcloud_firewall_rules|default([]) +
        [ {
          'direction': 'in',
          'source_address_start': item.1,
          'source_address_end': item.1,
          'action': 'accept',
          'destination_port_start': '22',
          'destination_port_end': '22',
          'protocol': 'tcp',
          'family': 'IPv4',
          'comment': item.0.name|default('Admin IP')
        } ]
      }}
  with_subelements:
    - "{{ vpn_ip_list }}"
    - addresses
    - flags:
      skip_missing: True

- name: Allow Deployment servers to connect into servers with ssh
  set_fact:
    upcloud_firewall_rules: >
      {{ upcloud_firewall_rules|default([]) +
        [ {
          'direction': 'in',
          'source_address_start': item.1,
          'source_address_end': item.1,
          'action': 'accept',
          'destination_port_start': '22',
          'destination_port_end': '22',
          'protocol': 'tcp',
          'family': 'IPv4',
          'comment': item.0.name|default('Deployment Server')
        } ]
      }}
  with_subelements:
    - "{{ deployment_server_ip_list }}"
    - addresses
    - flags:
      skip_missing: True

- name: Allow members of the cluster in the firewall (through ansible_host variable)
  set_fact: 
    upcloud_firewall_rules: >
      {{ upcloud_firewall_rules|default([]) +
        [ {
          'direction': 'in',
          'source_address_start': hostvars[item]['ansible_host'],
          'source_address_end': hostvars[item]['ansible_host'],
          'action': 'accept',
          'family': 'IPv4',
          'comment': 'Member of this cluster'
        } ]
      }}
  with_items:
    - "{{ groups['all'] }}"
  when: hostvars[item]['ansible_host'] is defined and hostvars[item]['ansible_host'] | match("{{upcloud_ipv4_regex}}")

- name: Allow members of the cluster in the firewall (through hostname)
  set_fact: 
    upcloud_firewall_rules: >
      {{ upcloud_firewall_rules|default([]) +
        [ {
          'direction': 'in',
          'source_address_start': item,
          'source_address_end': item,
          'action': 'accept',
          'family': 'IPv4',
          'comment': 'Member of this cluster'
        } ]
      }}
  with_items:
    - "{{ groups['all'] }}"
  when: item | match("{{upcloud_ipv4_regex}}")

- name: Allow public network (eth1) of the cluster members in the firewall
  set_fact: 
    upcloud_firewall_rules: >
      {{ upcloud_firewall_rules|default([]) +
        [ {
          'direction': 'in',
          'source_address_start': hostvars[item]['ansible_eth0'],
          'source_address_end': hostvars[item]['ansible_eth0'],
          'action': 'accept',
          'family': 'IPv4',
          'comment': 'Member of this cluster'
        } ]
      }}
  with_items:
    - "{{ groups['all'] }}"
  when: hostvars[item]['ansible_eth0'] is defined

- name: Allow private network (eth1) of the cluster members in the firewall
  set_fact: 
    upcloud_firewall_rules: >
      {{ upcloud_firewall_rules|default([]) +
        [ {
          'direction': 'in',
          'source_address_start': hostvars[item]['ansible_eth1']['ipv4']['address'],
          'source_address_end': hostvars[item]['ansible_eth1']['ipv4']['address'],
          'action': 'accept',
          'family': 'IPv4'
        } ]
      }}
  with_items:
    - "{{ groups['all'] }}"
  when: hostvars[item]['ansible_eth1'] is defined

- name: Add default rules to all machines as last rules
  set_fact:
    upcloud_firewall_rules: >
      {{ upcloud_firewall_rules + default_firewall_rules }}

# Setup firewalls using custom upcloud_firewall  directive
# source: https://github.com/UpCloudLtd/upcloud-ansible
- name: Ensure legacy firewall rules are removed
  upcloud_firewall:
    state: absent
    ip_address: "{{ item }}"
    firewall_rules: "{{ removable_legacy_firewall_rules }}"
  with_items: "{{ groups['all'] }}"
  when: removable_legacy_firewall_rules.0 is defined

# Allow web ports only to machines with nginx
- name: Setup firewalls to all load balancer machines
  upcloud_firewall:
    state: present
    ip_address: "{{ item }}"
    firewall_rules: "{{ web_firewall_rules +  upcloud_firewall_rules }}"
  with_flattened:
    - "{{ groups['wundertools-dev']|default([]) }}"
    - "{{ groups['wundertools-stage']|default([]) }}"
    - "{{ groups['wundertools-prod-lb']|default([]) }}"

- name: Setup firewalls for the backend groups
  upcloud_firewall:
    state: present
    ip_address: "{{ item }}"
    firewall_rules: "{{ upcloud_firewall_rules }}"
  with_flattened:
    - "{{ groups['wundertools-prod-db']|default([]) }}"
    - "{{ groups['wundertools-prod-front']|default([]) }}"